// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User Model: Stores user information.
model User {
  id           String       @id @default(uuid())
  name         String
  email        String       @unique
  passwordHash String
  polls        Poll[] // A user can create many polls
  votes        Vote[] // A user can cast many votes
}

// Poll Model: Stores the poll question and its creator.
model Poll {
  id          String       @id @default(uuid())
  question    String
  isPublished Boolean      @default(false)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  creator     User         @relation(fields: [creatorId], references: [id])
  creatorId   String // Foreign key for the User
  options     PollOption[] // A poll has many options
}

// PollOption Model: Stores a single option for a poll.
model PollOption {
  id    String @id @default(uuid())
  text  String
  poll  Poll   @relation(fields: [pollId], references: [id])
  pollId String // Foreign key for the Poll
  votes Vote[] // An option can have many votes
}

// Vote Model: This is the join table for the many-to-many relationship.
model Vote {
  id           String     @id @default(uuid())
  user         User       @relation(fields: [userId], references: [id])
  userId       String // Foreign key for the User
  pollOption   PollOption @relation(fields: [pollOptionId], references: [id])
  pollOptionId String // Foreign key for the PollOption

  // Ensures a user can only vote once per option
  @@unique([userId, pollOptionId])
}